package com.dsa.recursion;

import java.util.Scanner;

public class Generate_Brackets {
	public static void generateBrackets(StringBuilder output, int n, int open, int close, int i) {
		if (i == 2 * n) {
			System.out.println(output);
			return;
		}
		if (open < n) {
			generateBrackets(output.append("("), n, open + 1, close, i + 1);
			System.out.println("P1 ->"+output);
			output.deleteCharAt(output.length() - 1);
			System.out.println("P2 ->"+output);
		}
		if (close < open) {
			generateBrackets(output.append(")"), n, open, close + 1, i + 1);
			System.out.println("P3 ->"+output);
			output.deleteCharAt(output.length() - 1);
			System.out.println("P4 ->"+output);
		}
	}

	public static void main(String[] args) {
		StringBuilder output = new StringBuilder();
		int n;
		Scanner sc = new Scanner(System.in);
		n = sc.nextInt();
		generateBrackets(output, n, 0, 0, 0);
		sc.close();
	}

}
